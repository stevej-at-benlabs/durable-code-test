{
  "version": "3.0",
  "_meta": {
    "description": "Project layout rules for both AI agents and linting tools",
    "schema_version": "3.0",
    "last_updated": "2025-09-21"
  },

  "ai_guidance": {
    "description": "Human-readable guidance for AI agents on file placement decisions",
    "principles": {
      "separation_of_concerns": "Keep different types of code in designated areas",
      "test_isolation": "All test files must be in test/ directory, never in source",
      "feature_vs_component": "Complex features go in features/, simple UI in components/",
      "script_organization": "Frontend scripts in frontend/scripts, backend in backend/scripts, project-wide in scripts/"
    },
    "decision_trees": {
      "react_component_placement": {
        "question": "Where should this React component go?",
        "criteria": {
          "has_websocket": "→ features/[feature-name]/",
          "has_complex_state": "→ features/[feature-name]/",
          "makes_api_calls": "→ features/[feature-name]/",
          "is_simple_ui": "→ components/common/",
          "is_tab_without_logic": "→ components/tabs/"
        }
      },
      "python_module_placement": {
        "question": "Where should this Python module go?",
        "criteria": {
          "is_api_endpoint": "→ backend/app/api/",
          "is_business_logic": "→ backend/app/services/",
          "is_data_model": "→ backend/app/models/",
          "is_core_utility": "→ backend/app/core/",
          "is_linting_rule": "→ tools/design_linters/rules/[category]/"
        }
      },
      "test_placement": {
        "question": "Where should this test file go?",
        "criteria": {
          "unit_test": "→ test/unit_test/ (mirror source structure)",
          "integration_test": "→ test/integration_test/",
          "performance_test": "→ test/performance_test/"
        }
      }
    },
    "common_mistakes": {
      "test_in_source": "Never put test files in source directories",
      "debug_in_root": "Don't leave debug files in project root",
      "complex_in_components": "Don't put complex features in components/",
      "scripts_scattered": "Don't scatter scripts - organize by scope",
      "tools_root_files": "Don't place Python files in tools root - use subdirectories"
    }
  },

  "linter_rules": {
    "description": "Machine-readable rules for file placement validation",
    "paths": {
      ".ai/": {
        "allow": [
          "^\\.ai/[^/]+\\.json$",
          "^\\.ai/[^/]+\\.md$",
          "^\\.ai/docs/[^/]+\\.md$",
          "^\\.ai/features/[^/]+\\.md$",
          "^\\.ai/howto/[^/]+\\.md$",
          "^\\.ai/templates/[^/]+\\.template$"
        ],
        "deny": [
          "\\.py$",
          "\\.js$",
          "\\.ts$",
          "\\.tsx$",
          "\\.jsx$",
          "test"
        ]
      },
      ".claude/commands/": {
        "allow": [
          "^\\.claude/commands/[^/]+\\.md$"
        ],
        "deny": [
          "\\.py$",
          "\\.js$",
          "\\.ts$",
          "\\.tsx$"
        ]
      },
      "durable-code-app/frontend/src/app/": {
        "allow": [
          "/app/App\\.tsx$",
          "/app/main\\.tsx$",
          "/app/[^/]+\\.ts$",
          "/app/[^/]+\\.tsx$"
        ],
        "deny": [
          "[Ff]eature",
          "[Ss]ervice",
          "[Aa]pi",
          "[Ww]ebsocket",
          "\\.test\\.",
          "\\.spec\\."
        ]
      },
      "durable-code-app/frontend/src/assets/": {
        "allow": [
          "\\.svg$",
          "\\.png$",
          "\\.jpg$",
          "\\.jpeg$",
          "\\.gif$",
          "\\.woff2?$",
          "\\.ttf$",
          "\\.css$"
        ],
        "deny": [
          "\\.ts$",
          "\\.tsx$",
          "\\.js$",
          "\\.jsx$"
        ]
      },
      "durable-code-app/frontend/src/components/": {
        "allow": [
          "/components/[^/]+/[^/]+\\.tsx$",
          "/components/[^/]+/[^/]+\\.ts$",
          "/components/[^/]+/[^/]+\\.module\\.css$",
          "/components/[^/]+/index\\.ts$"
        ],
        "deny": [
          "[Ww]eb[Ss]ocket",
          "[Ss]ervice\\.",
          "[Aa]pi\\.",
          "[Ss]tore\\.",
          "\\.test\\.",
          "\\.spec\\."
        ]
      },
      "durable-code-app/frontend/src/features/": {
        "allow": [
          "/features/[^/]+/components/",
          "/features/[^/]+/hooks/use",
          "/features/[^/]+/types/",
          "/features/[^/]+/services/",
          "/features/[^/]+/utils/",
          "/features/[^/]+/constants/",
          "/features/[^/]+/store/",
          "/features/[^/]+/index\\.ts$"
        ],
        "deny": [
          "\\.test\\.",
          "\\.spec\\.",
          "/features/[^/]+/[^/]+\\.tsx$"
        ]
      },
      "durable-code-app/frontend/src/core/": {
        "allow": [
          "/core/errors/",
          "/core/performance/",
          "/core/auth/",
          "/core/routing/"
        ],
        "deny": [
          "\\.test\\.",
          "\\.spec\\.",
          "[Ff]eature"
        ]
      },
      "durable-code-app/frontend/src/hooks/": {
        "allow": [
          "/hooks/use[A-Z].*\\.ts$",
          "/hooks/use[A-Z].*\\.tsx$"
        ],
        "deny": [
          "/hooks/(?!use)",
          "\\.test\\.",
          "\\.spec\\."
        ]
      },
      "durable-code-app/frontend/src/pages/": {
        "allow": [
          "Page\\.tsx$",
          "/pages/[^/]+/index\\.tsx$"
        ],
        "deny": [
          "\\.ts$",
          "[Cc]omponent\\.tsx$",
          "[Ss]ervice\\."
        ]
      },
      "durable-code-app/frontend/src/styles/": {
        "allow": [
          "\\.css$",
          "\\.scss$"
        ],
        "deny": [
          "\\.(ts|tsx|js|jsx)$",
          "\\.module\\.css$"
        ]
      },
      "durable-code-app/frontend/src/utils/": {
        "allow": [
          "/utils/[^/]+\\.ts$"
        ],
        "deny": [
          "\\.tsx$",
          "\\.jsx$",
          "\\.css$",
          "[Ff]eature",
          "\\.test\\.",
          "\\.spec\\."
        ]
      },
      "durable-code-app/backend/app/": {
        "allow": [
          "/app/main\\.py$",
          "/app/__init__\\.py$",
          "/app/[^/]+\\.py$",
          "/app/api/",
          "/app/core/",
          "/app/models/",
          "/app/services/",
          "/app/db/",
          "/app/middleware/",
          "/app/utils/"
        ],
        "deny": [
          "\\.(js|ts|tsx)$",
          "test_",
          "_test\\.py$"
        ]
      },
      "durable-code-app/backend/app/core/": {
        "allow": [
          "/core/[^/]+\\.py$",
          "/core/__init__\\.py$"
        ],
        "deny": [
          "test_",
          "_test\\.py$",
          "\\.(js|ts|tsx)$"
        ]
      },
      "durable-code-app/backend/app/services/": {
        "allow": [
          "_service\\.py$",
          "/services/[^/]+\\.py$",
          "/services/__init__\\.py$"
        ],
        "deny": [
          "test_",
          "_test\\.py$",
          "\\.(js|ts|tsx)$"
        ]
      },
      "tools/": {
        "description": "Tools root directory - Python files must be in subdirectories",
        "allow": [
          "^tools/__init__\\.py$",
          "^tools/\\.flake8$",
          "^tools/.*\\.md$",
          "^tools/[^/]+/.*$"
        ],
        "deny": [
          "^tools/[^/]+\\.py$"
        ]
      },
      "tools/design_linters/framework/": {
        "allow": [
          "/framework/[^/]+\\.py$",
          "/framework/__init__\\.py$"
        ],
        "deny": [
          "test_",
          "_test\\.py$",
          "\\.(js|ts|tsx)$"
        ]
      },
      "tools/design_linters/rules/": {
        "allow": [
          "/rules/[^/]+/[^/]+\\.py$",
          "/rules/[^/]+/__init__\\.py$"
        ],
        "deny": [
          "test_",
          "_test\\.py$",
          "\\.(js|ts|tsx)$"
        ]
      },
      "test/": {
        "allow": [
          "/test/.*/test_[^/]+\\.py$",
          "/test/.*\\.test\\.(ts|tsx|js)$",
          "/test/.*\\.spec\\.(ts|tsx|js)$",
          "/test/.*/__init__\\.py$",
          "/test/fixtures/.*\\.json$"
        ],
        "deny": [
          "/test/[^/]+\\.(py|js|ts)$"
        ]
      },
      "scripts/": {
        "allow": [
          "^scripts/[^/]+\\.(sh|py|js)$"
        ],
        "deny": [
          "\\.(ts|tsx)$",
          "\\.css$",
          "test"
        ]
      },
      ".": {
        "description": "Root directory rules",
        "allow": [
          "^[^/]+\\.md$",
          "^[^/]+\\.yml$",
          "^[^/]+\\.yaml$",
          "^[^/]+\\.json$",
          "^[^/]+\\.toml$",
          "^Makefile",
          "^Dockerfile",
          "^\\.gitignore$",
          "^\\.env",
          "^requirements.*\\.txt$",
          "^setup\\.py$",
          "^conftest\\.py$"
        ],
        "deny": [
          "^test[_-].*\\.py$",
          "^debug[_-].*\\.py$",
          "^tmp[_-].*\\.py$",
          "^temp[_-].*\\.py$",
          "_test\\.py$",
          "_spec\\.py$"
        ]
      }
    },
    "global_patterns": {
      "description": "Patterns that apply across the entire codebase",
      "deny_everywhere": [
        "\\.pyc$",
        "__pycache__",
        "\\.pytest_cache",
        "node_modules/",
        "\\.venv/",
        "\\.env\\.local$",
        "\\.DS_Store$",
        "Thumbs\\.db$"
      ],
      "test_files": {
        "patterns": [
          "test_.*\\.py$",
          ".*_test\\.py$",
          ".*\\.test\\.(js|ts|tsx)$",
          ".*\\.spec\\.(js|ts|tsx)$"
        ],
        "must_be_in": [
          "^test/",
          "^tests/"
        ]
      }
    }
  },

  "enforcement": {
    "linter_config_key": "layout_rules_file",
    "usage_example": {
      "python": "config = {'layout_rules_file': '.ai/layout.json'}",
      "makefile": "LAYOUT_RULES := .ai/layout.json"
    }
  }
}