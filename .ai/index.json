{
  "_meta": {
    "name": "Durable Code Test - AI Agent Index",
    "version": "1.0",
    "purpose": "AI-ready development practices demonstration project",
    "expanded_documentation": {
      "file": ".ai/index_expanded.md",
      "description": "Comprehensive details, usage examples, file locations, and implementation guides",
      "when_to_read": "When you need detailed understanding of any feature, template usage, or implementation guidance"
    },
    "ai_agent_usage": {
      "step_1": "Read this JSON file first for quick navigation and overview",
      "step_2": "Reference index_expanded.md for detailed information on specific topics",
      "step_3": "Use templates from .ai/templates/ for code generation",
      "step_4": "Follow standards from .ai/docs/ for compliance"
    }
  },
  "quick_actions": {
    "generate_code": {
      "command": "/new-code [filename] [description]",
      "process": "1. Select template below 2. Read template details in index_expanded.md 3. Use /new-code command"
    },
    "ask_questions": {
      "command": "/ask [your question]",
      "note": "Automatically references both this index and expanded documentation"
    },
    "start_development": {
      "command": "make dev",
      "details_in": "index_expanded.md#development-tooling"
    },
    "run_tests": {
      "command": "make test",
      "details_in": "index_expanded.md#testing-framework"
    }
  },
  "templates": {
    "_expanded_section": "index_expanded.md#templates",
    "_usage_note": "All templates use {{PLACEHOLDER}} variables - see expanded docs for complete variable lists",
    "linting-rule.py.template": {
      "purpose": "Extend design linting framework with new rules",
      "location": "tools/design_linters/rules/",
      "example_files": ["tools/design_linters/rules/solid/srp_rules.py"]
    },
    "react-component.tsx.template": {
      "purpose": "Modern React components with TypeScript and hooks",
      "location": "durable-code-app/frontend/src/components/",
      "example_files": ["durable-code-app/frontend/src/components/ParticleBackground.tsx"]
    },
    "web-tab.tsx.template": {
      "purpose": "Add new tabs to the web application interface",
      "location": "durable-code-app/frontend/src/components/tabs/",
      "example_files": ["durable-code-app/frontend/src/components/tabs/InfrastructureTab.tsx"]
    },
    "fastapi-endpoint.py.template": {
      "purpose": "Production-ready API endpoints with validation",
      "location": "durable-code-app/backend/app/",
      "example_files": ["durable-code-app/backend/app/main.py"]
    },
    "test-suite.py.template": {
      "purpose": "Comprehensive test coverage for any component",
      "location": "test/unit_test/tools/design_linters/",
      "example_files": ["test/unit_test/tools/design_linters/test_basic.py"]
    },
    "workflow.html.template": {
      "purpose": "Interactive workflow documentation with Mermaid diagrams",
      "location": "anywhere for documentation",
      "use_case": "Process documentation, sequence diagrams, training materials"
    }
  },
  "features": {
    "_expanded_section": "index_expanded.md#features",
    "_implementation_note": "Each feature has detailed documentation with file references and usage examples",
    "design-linters": {
      "file": "features/design-linters.md",
      "summary": "Pluggable linting framework enforcing SOLID principles and code quality",
      "key_files": ["tools/design_linters/cli.py", "tools/design_linters/framework/"],
      "usage": "make lint-custom, design-linter src/"
    },
    "web-application": {
      "file": "features/web-application.md",
      "summary": "Full-stack React/TypeScript + FastAPI application with tabbed interface",
      "key_files": ["durable-code-app/frontend/src/App.tsx", "durable-code-app/backend/app/main.py"],
      "usage": "make dev, make launch"
    },
    "development-tooling": {
      "file": "features/development-tooling.md",
      "summary": "Comprehensive build automation with Make targets and Docker",
      "key_files": ["Makefile", "Makefile.lint", "docker-compose.yml"],
      "usage": "make help, make build, make test"
    },
    "claude-integration": {
      "file": "features/claude-integration.md",
      "summary": "AI-powered development workflows with custom commands",
      "key_files": [".claude/commands/", ".ai/templates/"],
      "usage": "/new-code, /ask, /solid commands"
    },
    "testing-framework": {
      "file": "features/testing-framework.md",
      "summary": "Multi-layered quality assurance with unit, integration, and performance tests",
      "key_files": ["test/", ".pre-commit-config.yaml"],
      "usage": "make test, pytest"
    }
  },
  "standards": {
    "_expanded_section": "index_expanded.md#standards",
    "_compliance_note": "All generated code must follow these standards - automatically enforced by linting",
    "STANDARDS.md": {
      "purpose": "Core development guidelines and best practices",
      "enforcement": "Pre-commit hooks, linting rules, CI/CD"
    },
    "FILE_HEADER_STANDARDS.md": {
      "purpose": "Required documentation headers for all files",
      "template": "Purpose, Scope, Overview, Dependencies, Exports, Interfaces, Implementation"
    },
    "CSS_LAYOUT_STABILITY.md": {
      "purpose": "Frontend consistency and responsive design guidelines",
      "applies_to": "React components, CSS modules, styling patterns"
    },
    "BRANCH_PROTECTION.md": {
      "purpose": "Git workflow and collaborative development standards",
      "enforcement": "GitHub branch protection rules"
    }
  },
  "howto": {
    "_expanded_section": "index_expanded.md#howto-guides",
    "_usage_note": "Step-by-step guides for common development tasks",
    "run-tests.md": {
      "purpose": "Execute tests using Make targets and Docker",
      "key_commands": ["make test", "make test-unit", "make test-coverage"]
    },
    "run-linting.md": {
      "purpose": "Run linting and code quality checks",
      "key_commands": ["make lint-all", "make lint-custom", "make lint-fix"]
    },
    "setup-development.md": {
      "purpose": "Complete development environment setup",
      "key_commands": ["make init", "make dev", "make status"]
    },
    "deploy-application.md": {
      "purpose": "Production deployment and monitoring",
      "key_commands": ["make build", "make start", "make status"]
    },
    "debug-issues.md": {
      "purpose": "Systematic debugging and troubleshooting",
      "key_commands": ["make logs", "docker logs", "make status"]
    },
    "debug-with-tests-and-logging.md": {
      "purpose": "Test-driven debugging methodology",
      "philosophy": "Use unit tests and Loguru logging, never temp files"
    }
  },
  "file_structure": {
    "_note": "Key directories and their purposes",
    "tools/design_linters/": "Linting framework implementation",
    "durable-code-app/": "Full-stack web application",
    "test/": "Comprehensive test suites",
    ".ai/": "AI agent documentation and templates",
    ".claude/commands/": "Claude AI command definitions",
    "scripts/": "Development automation scripts"
  },
  "common_workflows": {
    "add_linting_rule": {
      "steps": ["Use linting-rule.py.template", "Place in tools/design_linters/rules/", "Add tests", "Update configuration"],
      "details_in": "index_expanded.md#adding-linting-rules"
    },
    "add_web_tab": {
      "steps": ["Use web-tab.tsx.template", "Place in frontend/src/components/tabs/", "Update App.tsx", "Add styling"],
      "details_in": "index_expanded.md#adding-web-tabs"
    },
    "add_api_endpoint": {
      "steps": ["Use fastapi-endpoint.py.template", "Add to backend routes", "Create Pydantic models", "Add tests"],
      "details_in": "index_expanded.md#adding-api-endpoints"
    }
  }
}
