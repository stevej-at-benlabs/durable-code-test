name: Backend Tests

on:
  pull_request:
    branches: [main, develop]
    paths:
      - 'durable-code-app/backend/**'
      - '.github/workflows/backend-tests.yml'
      - 'test/unit_test/**'
      - 'test/integration_test/**'
  push:
    branches: [main]
    paths:
      - 'durable-code-app/backend/**'
      - 'test/unit_test/**'
      - 'test/integration_test/**'

jobs:
  test:
    name: Backend Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./durable-code-app/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run type checking with MyPy
        run: poetry run mypy app

      - name: Run linting with Ruff
        run: poetry run ruff check app

      - name: Run security checks with Bandit
        run: poetry run bandit -r app

      - name: Run tests with pytest
        run: |
          export PYTHONPATH=$PYTHONPATH:$PWD/../../tools/design_linters:$PWD/../../tools
          poetry run pytest ../../test/unit_test --cov=app --cov-report=xml --cov-report=html --cov-report=term

      - name: Check test coverage
        run: |
          poetry run coverage report --fail-under=75

      - name: Upload coverage to codecov
        if: github.event_name == 'pull_request'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: htmlcov/

      - name: Generate test summary
        if: always()
        run: |
          echo "## ðŸ“Š Backend Test Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          poetry run coverage report >> $GITHUB_STEP_SUMMARY || echo "Coverage report not available" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  integration-test:
    name: Backend Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    defaults:
      run:
        working-directory: ./durable-code-app/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
          TESTING: "true"
        run: |
          export PYTHONPATH=$PYTHONPATH:$PWD/../../tools/design_linters:$PWD/../../tools
          poetry run pytest ../../test/integration_test -v || echo "No integration tests found"
