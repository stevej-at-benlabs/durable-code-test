# Purpose: Development Docker Compose configuration with hot reload support
# Scope: Local development environment orchestration for rapid iteration
# Overview: Configures comprehensive Docker services for local development with automatic code
#     reloading capabilities for both backend (FastAPI with uvicorn --reload) and frontend
#     (Vite HMR) applications. Volume mounts bind local source directories to containers
#     enabling instant code updates without rebuilds. Includes development-specific settings
#     like debug mode, verbose logging, and isolated network configuration. The backend service
#     mounts app, test, and tools directories while excluding __pycache__ for performance.
#     Frontend excludes node_modules from volume mounts to prevent conflicts. All services
#     auto-restart unless explicitly stopped, ensuring development continuity.
# Dependencies: Docker, Docker Compose, local source code directories
# Exports: Development Docker services with hot reload capabilities
# Interfaces: Backend on port 8000, Frontend on port 5173 (Vite dev server)
# Implementation: Volume mounts for source code, development server configurations

services:
  backend-dev:
    build:
      context: ./durable-code-app/backend
      dockerfile: Dockerfile.dev
    container_name: durable-code-backend-dev
    ports:
      - "8000:8000"
    environment:
      - ENV=development
    volumes:
      - ./durable-code-app/backend:/app
      - ./test:/app/test
      - ./tools:/app/tools
      - /app/__pycache__
    networks:
      - durable-network-dev
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend-dev:
    build:
      context: ./durable-code-app/frontend
      dockerfile: Dockerfile.dev
    container_name: durable-code-frontend-dev
    ports:
      - "5173:5173"
    depends_on:
      - backend-dev
    volumes:
      - ./durable-code-app/frontend:/app
      - /app/node_modules
    networks:
      - durable-network-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development

networks:
  durable-network-dev:
    driver: bridge
